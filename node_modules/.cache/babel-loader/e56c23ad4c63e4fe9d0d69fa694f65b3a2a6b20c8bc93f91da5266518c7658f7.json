{"ast":null,"code":"var _jsxFileName = \"/Users/parkyujin/Desktop/Thunk/src/redux/components/Input/Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport LabledInput from \"../common/LabledInput\";\nimport HeightBox from \"../common/HeightBox\";\nimport { StyledButton } from \"./styles\";\nimport { FlexDiv } from \"./styles\";\nimport RightMarginBox from \"../common/RightMarginBox\";\nimport \"./styles\";\nimport { StyledDiv } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { __addTodoThunk } from \"../../modules/todos\";\n\n/**\n * 컴포넌트 개요 : Todo 메인 페이지에서 제목과 내용을 입력하는 영역\n * 2022.12.16 : 최초 작성\n *\n * @returns Input 컴포넌트\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  const dispatch = useDispatch();\n\n  // useSelector를 통한, store의 값 접근\n  const todos = useSelector(state => state.todos);\n\n  // 컴포넌트 내부에서 사용할 state 2개(제목, 내용) 정의\n  const [title, setTitle] = useState(\"\");\n  const [contents, setContents] = useState(\"\");\n\n  // 에러 메시지 발생 함수\n  const getErrorMsg = (errorCode, params) => {\n    switch (errorCode) {\n      case \"01\":\n        return alert(`[필수 입력 값 검증 실패 안내]\\n\\n제목과 내용은 모두 입력돼야 합니다. 입력값을 확인해주세요.\\n입력된 값(제목 : '${params.title}', 내용 : '${params.contents}')`);\n      case \"02\":\n        return alert(`[내용 중복 안내]\\n\\n입력하신 제목('${params.title}')및 내용('${params.contents}')과 일치하는 TODO는 이미 TODO LIST에 등록되어 있습니다.\\n기 등록한 TODO ITEM의 수정을 원하시면 해당 아이템의 [상세보기]-[수정]을 이용해주세요.`);\n      default:\n        return `시스템 내부 오류가 발생하였습니다. 고객센터로 연락주세요.`;\n    }\n  };\n\n  // title의 변경을 감지하는 함수\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  // contents의 변경을 감지하는 함수\n  const handleContentsChange = event => {\n    setContents(event.target.value);\n  };\n\n  // form 태그 내부에서의 submit이 실행된 경우 호출되는 함수\n  const handleSubmitButtonClick = event => {\n    // submit의 고유 기능인, 새로고침(refresh)을 막아주는 역함\n    event.preventDefault();\n\n    // 제목과 내용이 모두 존재해야만 정상처리(하나라도 없는 경우 오류 발생)\n    // \"01\" : 필수 입력값 검증 실패 안내\n    if (!title || !contents) {\n      return getErrorMsg(\"01\", {\n        title,\n        contents\n      });\n    }\n\n    // 이미 존재하는 todo 항목이면 오류\n    // const validationArr = todos.filter(\n    //   (item) => item.title === title && item.contents === contents\n    // );\n\n    // \"02\" : 내용 중복 안내\n    // if (validationArr.length > 0) {\n    //   return getErrorMsg(\"02\", { title, contents });\n    // }\n\n    // 추가하려는 todo를 newTodo라는 객체로 세로 만듦\n    const newTodo = {\n      title,\n      contents,\n      isDone: false\n      // id: uuidv4(),\n    };\n\n    // todo를 추가하는 reducer 호출\n    // 인자 : payload\n    // dispatch(addTodo(newTodo));\n    dispatch(__addTodoThunk(newTodo));\n\n    // state 두 개를 초기화\n    setTitle(\"\");\n    setContents(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitButtonClick,\n      children: /*#__PURE__*/_jsxDEV(FlexDiv, {\n        children: [/*#__PURE__*/_jsxDEV(RightMarginBox, {\n          margin: 10,\n          children: [/*#__PURE__*/_jsxDEV(LabledInput, {\n            id: \"title\",\n            label: \"\\uC81C\\uBAA9\",\n            placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: title,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeightBox, {\n            height: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabledInput, {\n            id: \"contents\",\n            label: \"\\uB0B4\\uC6A9\",\n            placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: contents,\n            onChange: handleContentsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          type: \"submit\",\n          children: \"\\uC81C\\uCD9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"72oxNhf1nHx9JGcTpPGnfwVMN30=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","LabledInput","HeightBox","StyledButton","FlexDiv","RightMarginBox","StyledDiv","useDispatch","useSelector","__addTodoThunk","Input","dispatch","todos","state","title","setTitle","contents","setContents","getErrorMsg","errorCode","params","alert","handleTitleChange","event","target","value","handleContentsChange","handleSubmitButtonClick","preventDefault","newTodo","isDone"],"sources":["/Users/parkyujin/Desktop/Thunk/src/redux/components/Input/Input.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport LabledInput from \"../common/LabledInput\";\nimport HeightBox from \"../common/HeightBox\";\nimport { StyledButton } from \"./styles\";\nimport { FlexDiv } from \"./styles\";\nimport RightMarginBox from \"../common/RightMarginBox\";\nimport \"./styles\";\nimport { StyledDiv } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { __addTodoThunk } from \"../../modules/todos\";\n\n/**\n * 컴포넌트 개요 : Todo 메인 페이지에서 제목과 내용을 입력하는 영역\n * 2022.12.16 : 최초 작성\n *\n * @returns Input 컴포넌트\n */\nfunction Input() {\n  const dispatch = useDispatch();\n\n  // useSelector를 통한, store의 값 접근\n  const todos = useSelector((state) => state.todos);\n\n  // 컴포넌트 내부에서 사용할 state 2개(제목, 내용) 정의\n  const [title, setTitle] = useState(\"\");\n  const [contents, setContents] = useState(\"\");\n\n  // 에러 메시지 발생 함수\n  const getErrorMsg = (errorCode, params) => {\n    switch (errorCode) {\n      case \"01\":\n        return alert(\n          `[필수 입력 값 검증 실패 안내]\\n\\n제목과 내용은 모두 입력돼야 합니다. 입력값을 확인해주세요.\\n입력된 값(제목 : '${params.title}', 내용 : '${params.contents}')`\n        );\n      case \"02\":\n        return alert(\n          `[내용 중복 안내]\\n\\n입력하신 제목('${params.title}')및 내용('${params.contents}')과 일치하는 TODO는 이미 TODO LIST에 등록되어 있습니다.\\n기 등록한 TODO ITEM의 수정을 원하시면 해당 아이템의 [상세보기]-[수정]을 이용해주세요.`\n        );\n      default:\n        return `시스템 내부 오류가 발생하였습니다. 고객센터로 연락주세요.`;\n    }\n  };\n\n  // title의 변경을 감지하는 함수\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  // contents의 변경을 감지하는 함수\n  const handleContentsChange = (event) => {\n    setContents(event.target.value);\n  };\n\n  // form 태그 내부에서의 submit이 실행된 경우 호출되는 함수\n  const handleSubmitButtonClick = (event) => {\n    // submit의 고유 기능인, 새로고침(refresh)을 막아주는 역함\n    event.preventDefault();\n\n    // 제목과 내용이 모두 존재해야만 정상처리(하나라도 없는 경우 오류 발생)\n    // \"01\" : 필수 입력값 검증 실패 안내\n    if (!title || !contents) {\n      return getErrorMsg(\"01\", { title, contents });\n    }\n\n    // 이미 존재하는 todo 항목이면 오류\n    // const validationArr = todos.filter(\n    //   (item) => item.title === title && item.contents === contents\n    // );\n\n    // \"02\" : 내용 중복 안내\n    // if (validationArr.length > 0) {\n    //   return getErrorMsg(\"02\", { title, contents });\n    // }\n\n    // 추가하려는 todo를 newTodo라는 객체로 세로 만듦\n    const newTodo = {\n      title,\n      contents,\n      isDone: false,\n      // id: uuidv4(),\n    };\n\n    // todo를 추가하는 reducer 호출\n    // 인자 : payload\n    // dispatch(addTodo(newTodo));\n    dispatch(__addTodoThunk(newTodo));\n\n    // state 두 개를 초기화\n    setTitle(\"\");\n    setContents(\"\");\n  };\n\n  return (\n    <StyledDiv>\n      <form onSubmit={handleSubmitButtonClick}>\n        <FlexDiv>\n          <RightMarginBox margin={10}>\n            <LabledInput\n              id=\"title\"\n              label=\"제목\"\n              placeholder=\"제목을 입력해주세요.\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n            <HeightBox height={10} />\n            <LabledInput\n              id=\"contents\"\n              label=\"내용\"\n              placeholder=\"내용을 입력해주세요.\"\n              value={contents}\n              onChange={handleContentsChange}\n            />\n          </RightMarginBox>\n          <StyledButton type=\"submit\">제출</StyledButton>\n        </FlexDiv>\n      </form>\n    </StyledDiv>\n  );\n}\n\nexport default Input;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}